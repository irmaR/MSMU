
	homework 1 problems:
		rock-paper-scissors
		- make a cheating version that always wins?
			- so simply returns "I win!"
		- make an honest version that always plays rock
		- make an honest version that chooses randomly
		- make a version that takes both players as arguments
			- can you avoid making nine different pairs of checks?
		picobot (see HMC homework 0)
		- empty room and maze
			- implement the right-hand rule
			- how to test?  check the source code

		encourage testing!  unit tests in doc comments, as we show in the lecture notes below

		here's an empty room solution that first finds a corner and then traverses column by column:

		## First find the top-right corner.

		# move to the top row
		0 x*** -> N 0

		# move to the rightmost column
		0 Nx** -> E 0

		# Next start traversing column by column
		0 NE*x -> S 1

		# This one is necessary if there is only one row on the map
		0 NExS -> W 0

		# move to the bottom row
		1 ***x -> S 1

		# then move one column to the left
		1 **xS -> W 2

		# move to the top row
		2 x*** -> N 2

		# then move one column to the left
		2 N*x* -> W 1

		other solutions are possible, for example just start from where you are and wrap around when you reach one end.

		here's an implementation of the right-hand rule which is suboptimal (12 rules instead of 8):

		## headed north
		0 xE** -> N 0

		0 *x** -> E 1

		0 NEx* -> W 3

		0 NEWx -> S 2

		## headed east
		1 *x*S -> E 1

		1 ***x -> S 2

		1 xE*S -> N 0

		1 NExS -> W 3

		## headed south
		2 **Wx -> S 2

		2 **x* -> W 3

		2 *xWS -> E 1

		2 xEWS -> N 0 

		## headed west
		3 N*x* -> W 3

		3 x*** -> N 0

		3 N*Wx -> S 2

		3 NxWS -> E 1

